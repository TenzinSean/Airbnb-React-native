{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _reactNative = require(\"react-native\");\n\nvar _expo = require(\"expo\");\n\nvar _App = _interopRequireDefault(require(\"./App\"));\n\nvar _app = require(\"./app.json\");\n\nif (_reactNative.Platform.OS == \"android\") {\n  (0, _expo.registerRootComponent)(_App.default);\n} else {\n  _reactNative.AppRegistry.registerComponent(_app.name, function () {\n    return _App.default;\n  });\n}","map":{"version":3,"sources":["/Users/tenzin/Desktop/project_2020/Mobile/Airbnb-React-native/index.js"],"names":["Platform","OS","App","AppRegistry","registerComponent","appName"],"mappings":";;AAWA;;AACA;;AACA;;AACA;;AAKA,IAAIA,sBAASC,EAAT,IAAe,SAAnB,EAA8B;AAC5B,mCAAsBC,YAAtB;AACD,CAFD,MAEO;AACLC,2BAAYC,iBAAZ,CAA8BC,SAA9B,EAAuC;AAAA,WAAMH,YAAN;AAAA,GAAvC;AACD","sourcesContent":["/**\n * @format\n */\n\n// import {AppRegistry} from 'react-native';\n// import App from './App';\n// import {name as appName} from './app.json';\n\n// AppRegistry.registerComponent(appName, () => App);\n\n\nimport { AppRegistry, Platform } from \"react-native\";\nimport { registerRootComponent } from \"expo\";\nimport App from \"./App\";\nimport { name as appName } from \"./app.json\";\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in the Expo client or in a native build,\n// the environment is set up appropriately\nif (Platform.OS == \"android\") {\n  registerRootComponent(App);\n} else {\n  AppRegistry.registerComponent(appName, () => App);\n}"]},"metadata":{},"sourceType":"script"}